{"version":3,"sources":["webpack://react-admin/./src/pages/role/style.less?a047","pages/role/style.less","pages/menus/MenuTableSelect.jsx","pages/role/EditModal.jsx","pages/role/index.jsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_EXPORT___","push","WithCheckboxTable","renderTableCheckbox","Table","MenuTableSelect","config","ajax","state","loading","dataSource","menuTreeData","allMenuKeys","expandedRowKeys","expandedAll","columns","title","dataIndex","key","width","render","value","record","target","menuTargetOptions","find","item","label","fetchMenus","a","props","get","res","map","handleSearch","setState","menus","id","convertToTree","handleSearchValue","filterTree","node","path","name","code","some","toLowerCase","includes","handleSearchChange","e","timer","clearTimeout","setTimeout","handleToggleExpanded","this","onChange","disabled","others","style","padding","display","alignItems","Search","flex","allowClear","placeholder","onSearch","type","marginLeft","onClick","expandable","onExpandedRowsChange","rowSelection","getCheckboxProps","selectedRowKeys","pagination","rowKey","size","Component","modal","isEdit","top","onOk","useState","setLoading","useForm","form","useGet","mountFire","formatResult","values","setFieldsValue","saveRole","usePost","successTip","run","updateRole","usePut","fetchRoleByName","params","checkName","useDebounceValidator","rule","role","getFieldValue","Error","layout","labelCol","colLayout","xs","span","sm","okText","submit","cancelText","onCancel","resetFields","onFinish","hidden","gutter","marginBottom","IS_MOBILE","fitHeight","otherHeight","required","noSpace","maxLength","rules","validator","bodyStyle","pageNum","setPageNum","pageSize","setPageSize","conditions","setConditions","setRecord","visible","setVisible","list","total","data","deleteRole","useDel","text","items","color","confirm","onConfirm","handleDelete","className","styles","root","wrapperCol","htmlType","scroll","x","undefined","onPageNumChange","onPageSizeChange","EditModal","fullScreen"],"mappings":"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","file":"static/js/13.0d511992.chunk.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-10-1!../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-10-2!./style.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Input, Button} from 'antd';\nimport {convertToTree, filterTree} from '@ra-lib/util';\nimport {Table, renderTableCheckbox} from '@ra-lib/components';\nimport config from 'src/commons/config-hoc';\nimport {menuTargetOptions} from 'src/commons/options';\n\nconst WithCheckboxTable = renderTableCheckbox(Table);\n\n@config({\n    ajax: true,\n})\nexport default class MenuTableSelect extends Component {\n    static propTypes = {\n        value: PropTypes.array,     // 选中的节点\n        onChange: PropTypes.func,   // 选择节点时，触发\n    };\n\n    state = {\n        loading: false,\n        dataSource: [],     // 表格展示的数据，搜索时是 menuTreeData 子集\n        menuTreeData: [],   // 所有的菜单数据\n        allMenuKeys: [],\n        expandedRowKeys: [],\n        expandedAll: true,\n    };\n\n    columns = [\n        {title: '名称', dataIndex: 'title', key: 'title'},\n        {\n            title: '类型', dataIndex: 'type', key: 'type', width: 100,\n            render: (value, record) => {\n                if (value === 2) return '功能权限码';\n\n                const {target} = record;\n\n                return menuTargetOptions.find(item => item.value === target)?.label || '-';\n            },\n        },\n    ];\n\n    componentDidMount() {\n        (async () => {\n            await this.handleSearch();\n        })();\n    }\n\n    fetchMenus = async () => {\n        const res = await this.props.ajax.get('/menus');\n\n        return (res || []).map(item => {\n            return {\n                ...item,\n            };\n        });\n    };\n\n    handleSearch = async () => {\n        this.setState({loading: true});\n        try {\n            this.setState({loading: false});\n            const menus = this.props.menus || await this.fetchMenus();\n            const allMenuKeys = menus.map(item => item.id);\n            const menuTreeData = convertToTree(menus);\n\n            // 默认展开全部\n            const expandedRowKeys = [...allMenuKeys];\n            this.setState({dataSource: menuTreeData, menuTreeData, allMenuKeys, expandedRowKeys});\n\n        } catch (e) {\n            this.setState({loading: false});\n            throw e;\n        }\n    };\n\n    handleSearchValue = (value) => {\n        const {menuTreeData, allMenuKeys} = this.state;\n\n        const dataSource = filterTree(menuTreeData, node => {\n            let {title, path, name, code} = node;\n\n            return [title, path, name, code].some(item => {\n                const lowerValue = (item || '').toLowerCase();\n                return lowerValue.includes(value);\n            });\n        });\n        this.setState({\n            dataSource,\n            expandedAll: true,\n            expandedRowKeys: allMenuKeys,\n        });\n    };\n\n    handleSearchChange = (e) => {\n        // 防抖\n        if (this.timer) clearTimeout(this.timer);\n\n        this.timer = setTimeout(() => this.handleSearchValue(e.target.value), 300);\n    };\n\n    handleToggleExpanded = () => {\n        const {expandedAll, allMenuKeys} = this.state;\n        const expandedRowKeys = !expandedAll ? allMenuKeys : [];\n        this.setState({expandedAll: !expandedAll, expandedRowKeys});\n    };\n\n    render() {\n        const {\n            dataSource,\n            loading,\n            expandedRowKeys,\n            expandedAll,\n        } = this.state;\n\n        const {value, onChange, disabled, ...others} = this.props;\n\n        return (\n            <>\n                <div style={{padding: 8, width: '100%', display: 'flex', alignItems: 'center'}}>\n                    <Input.Search\n                        style={{flex: 1}}\n                        allowClear\n                        placeholder=\"输入关键字进行搜索\"\n                        onSearch={this.handleSearchValue}\n                        onChange={this.handleSearchChange}\n                    />\n                    <Button\n                        type=\"text\"\n                        style={{flex: 0, marginLeft: 16}}\n                        onClick={this.handleToggleExpanded}\n                    >全部{expandedAll ? '收起' : '展开'}</Button>\n                </div>\n                <WithCheckboxTable\n                    expandable={{\n                        expandedRowKeys: expandedRowKeys,\n                        onExpandedRowsChange: expandedRowKeys => this.setState({expandedRowKeys}),\n                    }}\n                    rowSelection={{\n                        getCheckboxProps: () => {\n                            return {disabled};\n                        },\n                        selectedRowKeys: value,\n                        onChange: onChange,\n                    }}\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                    rowKey=\"id\"\n                    size=\"small\"\n                    {...others}\n                />\n            </>\n        );\n    }\n}\n\n","import {useState} from 'react';\nimport {Card, Row, Col, Form} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent, FormItem, Content} from '@ra-lib/components';\nimport {useDebounceValidator} from '@ra-lib/hooks';\nimport MenuTableSelect from 'src/pages/menus/MenuTableSelect';\nimport {IS_MOBILE} from 'src/config';\n\nexport default config({\n    modal: {\n        title: props => props.isEdit ? '编辑角色' : '创建角色',\n        width: '70%',\n        top: 50,\n    },\n})(function Edit(props) {\n    const {record, isEdit, onOk} = props;\n    const [loading, setLoading] = useState(false);\n    const [form] = Form.useForm();\n\n    // 获取详情 data为表单回显数据\n    props.ajax.useGet(`/roles/${record?.id}`, null, [], {\n        setLoading,\n        mountFire: isEdit, // 组件didMount时，只有编辑时才触发请求\n        formatResult: res => {\n            if (!res) return;\n            const values = {\n                ...res,\n            };\n            form.setFieldsValue(values);\n        },\n    });\n    // 添加请求\n    const {run: saveRole} = props.ajax.usePost('/roles', null, {setLoading, successTip: '创建成功！'});\n    // 更新请求\n    const {run: updateRole} = props.ajax.usePut('/roles', null, {setLoading, successTip: '修改成功！'});\n    const {run: fetchRoleByName} = props.ajax.useGet('/roleByName');\n\n    async function handleSubmit(values) {\n        const params = {\n            ...values,\n        };\n\n        if (isEdit) {\n            await updateRole(params);\n        } else {\n            await saveRole(params);\n        }\n\n        onOk();\n    }\n\n    const checkName = useDebounceValidator(async (rule, value) => {\n        if (!value) return;\n\n        const role = await fetchRoleByName({name: value});\n        if (!role) return;\n\n        const id = form.getFieldValue('id');\n        if (isEdit && role.id !== id && role.name === value) throw Error('角色名不能重复！');\n        if (!isEdit && role.name === value) throw Error('角色名不能重复！');\n    });\n\n    const layout = {labelCol: {flex: '100px'}};\n    const colLayout = {\n        xs: {span: 24},\n        sm: {span: 12},\n    };\n    return (\n        <ModalContent\n            loading={loading}\n            okText=\"保存\"\n            onOk={() => form.submit()}\n            cancelText=\"重置\"\n            onCancel={() => form.resetFields()}\n        >\n            <Form\n                form={form}\n                name=\"roleEdit\"\n                onFinish={handleSubmit}\n            >\n                {isEdit ? <FormItem hidden name=\"id\"/> : null}\n\n                <Row gutter={8}>\n                    <Col {...colLayout} style={{marginBottom: IS_MOBILE ? 16 : 0}}>\n                        <Card title=\"基础信息\">\n                            <Content fitHeight={!IS_MOBILE} otherHeight={160}>\n                                <FormItem\n                                    {...layout}\n                                    label=\"角色名称\"\n                                    name=\"name\"\n                                    required\n                                    noSpace\n                                    maxLength={50}\n                                    rules={[\n                                        {validator: checkName},\n                                    ]}\n                                />\n                                <FormItem\n                                    {...layout}\n                                    type=\"textarea\"\n                                    label=\"备注\"\n                                    name=\"remark\"\n                                    maxLength={250}\n                                />\n                            </Content>\n                        </Card>\n                    </Col>\n                    <Col {...colLayout}>\n                        <Card title=\"权限配置\" bodyStyle={{padding: 0}}>\n                            <FormItem\n                                {...layout}\n                                name=\"menuIds\"\n                            >\n                                <MenuTableSelect fitHeight otherHeight={200}/>\n                            </FormItem>\n                        </Card>\n                    </Col>\n                </Row>\n            </Form>\n        </ModalContent>\n    );\n});\n","import {useState} from 'react';\nimport config from 'src/commons/config-hoc';\nimport {Button, Form, Space} from 'antd';\nimport {\n    PageContent,\n    QueryBar,\n    FormItem,\n    Table,\n    Pagination,\n    Operator,\n    ToolBar,\n} from '@ra-lib/components';\nimport EditModal from './EditModal';\nimport styles from './style.less';\nimport {IS_MOBILE} from 'src/config';\n\nexport default config({\n    path: '/roles',\n})(function Role(props) {\n    const [loading, setLoading] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [conditions, setConditions] = useState({});\n    const [record, setRecord] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [form] = Form.useForm();\n\n    const params = {\n        ...conditions,\n        pageNum,\n        pageSize,\n    };\n\n    // 获取列表\n    const {\n        data: {\n            dataSource,\n            total,\n        } = {},\n    } = props.ajax.useGet('/roles', params, [conditions, pageNum, pageSize], {\n        setLoading,\n        // mountFire: false, // 初始化不查询\n        formatResult: res => {\n            return {\n                dataSource: res?.list || [],\n                total: res?.total || 0,\n            };\n        },\n    });\n\n    // 删除\n    const {run: deleteRole} = props.ajax.useDel('/roles/:id', null, {setLoading, successTip: '删除成功！'});\n\n    const columns = [\n        {title: '角色名称', dataIndex: 'name'},\n        {title: '备注', dataIndex: 'remark'},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (text, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        onClick: () => setRecord(record) || setVisible(true),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除「${name}」吗？`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                ];\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    async function handleDelete(id) {\n        await deleteRole(id);\n\n        // 触发查询\n        setConditions({...conditions});\n    }\n\n    const layout = {\n        wrapperCol: {style: {width: 200}},\n    };\n\n    return (\n        <PageContent fitHeight className={styles.root} loading={loading}>\n            <QueryBar>\n                <Form\n                    name=\"role\"\n                    layout=\"inline\"\n                    form={form}\n                    onFinish={values => {\n                        setPageNum(1);\n                        setConditions(values);\n                    }}\n                >\n                    <FormItem\n                        {...layout}\n                        label=\"角色名称\"\n                        name=\"name\"\n                    />\n                    <FormItem>\n                        <Space>\n                            <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                            <Button htmlType=\"reset\">重置</Button>\n                        </Space>\n                    </FormItem>\n                </Form>\n            </QueryBar>\n            <ToolBar>\n                <Button type=\"primary\" onClick={() => setRecord(null) || setVisible(true)}>添加</Button>\n            </ToolBar>\n            <Table\n                fitHeight={!IS_MOBILE}\n                scroll={IS_MOBILE ? {x: 1000} : undefined}\n                dataSource={dataSource}\n                columns={columns}\n                rowKey=\"id\"\n                pagination={false}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={setPageNum}\n                onPageSizeChange={pageSize => setPageNum(1) || setPageSize(pageSize)}\n            />\n            <EditModal\n                fullScreen={IS_MOBILE}\n                width={IS_MOBILE ? '100%' : '70%'}\n                visible={visible}\n                isEdit={!!record}\n                record={record}\n                onOk={() => setVisible(false) || setConditions({...conditions})}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}