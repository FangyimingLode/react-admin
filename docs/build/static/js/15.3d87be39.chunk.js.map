{"version":3,"sources":["pages/demo/react-transition-group/index.jsx"],"names":["defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","config","path","props","useState","visible","setVisible","uuid","id","setId","visibleCSS","setVisibleCSS","text","items","setItems","style","marginBottom","className","appear","timeout","state","console","log","classNames","map","variant","size","onClick","filter","item","prompt"],"mappings":"iQAeMA,EAAe,CACjBC,WAAW,WAAD,OAHG,IAGH,kBACVC,QAAS,GAGPC,EAAmB,CACrBC,SAAU,CAACF,QAAS,GACpBG,QAAS,CAACH,QAAS,GACnBI,QAAS,CAACJ,QAAS,GACnBK,OAAQ,CAACL,QAAS,IAGPM,sBAAO,CAClBC,KAAM,gCADKD,EAEZ,SAAkBE,GAAQ,IAAD,EACMC,oBAAS,GADf,mBACjBC,EADiB,KACRC,EADQ,OAEJF,mBAASG,eAFL,mBAEjBC,EAFiB,KAEbC,EAFa,OAGYL,oBAAS,GAHrB,mBAGjBM,EAHiB,KAGLC,EAHK,OAIEP,mBAAS,CAC/B,CAACI,GAAID,cAAQK,KAAM,cACnB,CAACJ,GAAID,cAAQK,KAAM,aACnB,CAACJ,GAAID,cAAQK,KAAM,uBACnB,CAACJ,GAAID,cAAQK,KAAM,gBARC,mBAIjBC,EAJiB,KAIVC,EAJU,KAaxB,OACI,eAAC,IAAD,WACI,qBAAKC,MAAO,CAACC,aAAc,QAA3B,SACI,eAAC,IAAD,CAAiBC,UAAU,YAA3B,UACKZ,EACG,cAAC,IAAD,CAEIa,QAAM,EACNC,QAAS,IAHb,SAKK,SAAAC,GAEG,OADAC,QAAQC,IAAIF,GAER,qBACIL,MAAK,2BACEtB,GACAG,EAAiBwB,IAH5B,sCAPHZ,GAkBT,KACHE,EACG,cAAC,IAAD,CACIS,QAAS,IACTI,WAAW,OAFf,SAII,qFAIJ,KACHV,EAAMW,KAAI,gBAAEhB,EAAF,EAAEA,GAAII,EAAN,EAAMA,KAAN,OACP,cAAC,IAAD,CAEIO,QAAS,IACTI,WAAW,OAHf,SAKI,gCACI,mBACIN,UAAU,aACVQ,QAAQ,SACRC,KAAK,KACLC,QAAS,kBACLb,GAAS,SAAAD,GAAK,OACVA,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKrB,KAAOA,SAN7C,kBAYCI,MAjBAJ,WAuBrB,8BACI,mBACImB,QAAS,WACL,IAAMf,EAAOkB,OAAO,mBAChBlB,GACAE,GAAS,SAAAD,GAAK,4BACPA,GADO,CAEV,CAACL,GAAID,cAAQK,cAN7B,sBAaA,mBAAQe,QAAS,kBAAMrB,GAAYD,IAAYI,EAAMF,gBAArD,+BACA,mBAAQoB,QAAS,kBAAMhB,GAAeD,IAAtC,4C","file":"static/js/15.3d87be39.chunk.js","sourcesContent":["import {useState} from 'react';\nimport {Button, Space} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport {PageContent} from '@ra-lib/components';\nimport {\n    CSSTransition,\n    Transition,\n    TransitionGroup,\n} from 'react-transition-group';\nimport {v4 as uuid} from 'uuid';\n\nimport './style.css';\n\nconst duration = 300;\n\nconst defaultStyle = {\n    transition: `opacity ${duration}ms ease-in-out`,\n    opacity: 0,\n};\n\nconst transitionStyles = {\n    entering: {opacity: 1},\n    entered: {opacity: 1},\n    exiting: {opacity: 0},\n    exited: {opacity: 0},\n};\n\nexport default config({\n    path: '/demo/react-transition-group',\n})(function TestAjax(props) {\n    const [visible, setVisible] = useState(true);\n    const [id, setId] = useState(uuid());\n    const [visibleCSS, setVisibleCSS] = useState(true);\n    const [items, setItems] = useState([\n        {id: uuid(), text: 'Buy eggs22'},\n        {id: uuid(), text: 'Pay bills'},\n        {id: uuid(), text: 'Invite friends over'},\n        {id: uuid(), text: 'Fix the TV'},\n    ]);\n\n    // console.log('demo/layout', layoutState);\n\n    return (\n        <PageContent>\n            <div style={{marginBottom: '1rem'}}>\n                <TransitionGroup className=\"todo-list\">\n                    {visible ? (\n                        <Transition\n                            key={id}\n                            appear\n                            timeout={500}\n                        >\n                            {state => {\n                                console.log(state);\n                                return (\n                                    <div\n                                        style={{\n                                            ...defaultStyle,\n                                            ...transitionStyles[state],\n                                        }}\n                                    >\n                                        I'm a fade Transition!\n                                    </div>\n                                );\n                            }}\n                        </Transition>\n                    ) : null}\n                    {visibleCSS ? (\n                        <CSSTransition\n                            timeout={500}\n                            classNames=\"item\"\n                        >\n                            <div>\n                                显示隐藏啊啊啊啊\n                            </div>\n                        </CSSTransition>\n                    ) : null}\n                    {items.map(({id, text}) => (\n                        <CSSTransition\n                            key={id}\n                            timeout={500}\n                            classNames=\"item\"\n                        >\n                            <div>\n                                <Button\n                                    className=\"remove-btn\"\n                                    variant=\"danger\"\n                                    size=\"sm\"\n                                    onClick={() =>\n                                        setItems(items =>\n                                            items.filter(item => item.id !== id),\n                                        )\n                                    }\n                                >\n                                    &times;\n                                </Button>\n                                {text}\n                            </div>\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </div>\n            <Space>\n                <Button\n                    onClick={() => {\n                        const text = prompt('Enter some text');\n                        if (text) {\n                            setItems(items => [\n                                ...items,\n                                {id: uuid(), text},\n                            ]);\n                        }\n                    }}\n                >\n                    Add Item\n                </Button>\n                <Button onClick={() => setVisible(!visible) || setId(uuid())}>Toggle Transition</Button>\n                <Button onClick={() => setVisibleCSS(!visibleCSS)}>Toggle CSSTransition</Button>\n            </Space>\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}