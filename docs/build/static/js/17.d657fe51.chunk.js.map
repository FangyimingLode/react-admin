{"version":3,"sources":["pages/role/RoleSelectTable.jsx","pages/user/EditModal.jsx","pages/user/index.jsx"],"names":["WithCheckboxTable","renderTableCheckbox","Table","RoleSelectTable","config","ajax","state","loading","dataSource","roles","columns","title","dataIndex","key","handleSearch","a","setState","props","get","res","handleSearchValue","value","filterTree","node","name","remark","some","val","toLowerCase","includes","handleChange","e","timer","clearTimeout","setTimeout","target","this","onChange","fullValue","disabled","others","style","padding","display","alignItems","Search","flex","allowClear","placeholder","onSearch","showHeader","size","rowSelection","getCheckboxProps","selectedRowKeys","map","item","id","selectedRows","pagination","rowKey","Component","defaultProps","modal","record","isDetail","isEdit","width","top","onOk","onCancel","useState","setLoading","useForm","form","useGet","mountFire","formatResult","setFieldsValue","save","usePost","successTip","run","update","usePut","fetchUserByAccount","values","params","checkAccount","useDebounceValidator","rule","account","user","getFieldValue","Error","layout","labelCol","colLayout","xs","span","sm","okText","submit","cancelText","resetFields","fullScreen","IS_MOBILE","footer","onClick","undefined","onFinish","hidden","gutter","marginBottom","fitHeight","otherHeight","label","required","noSpace","rules","validator","validateRules","email","mobile","bodyStyle","path","pageNum","setPageNum","pageSize","setPageSize","conditions","setConditions","visible","setVisible","setRecord","list","total","data","deleteRecord","useDel","render","text","items","color","confirm","onConfirm","handleDelete","queryItem","showCollapsedBar","collapsed","type","htmlType","serialNumber","scroll","x","onPageNumChange","onPageSizeChange","EditModal"],"mappings":"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","file":"static/js/17.d657fe51.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Input} from 'antd';\nimport {renderTableCheckbox, Table} from '@ra-lib/components';\nimport config from 'src/commons/config-hoc';\nimport {filterTree} from '@ra-lib/util';\n\nconst WithCheckboxTable = renderTableCheckbox(Table);\n\n@config({\n    ajax: true,\n})\nexport default class RoleSelectTable extends Component {\n    static propTypes = {\n        value: PropTypes.array,     // 选中的节点\n        onChange: PropTypes.func,   // 选择节点时，触发\n        fullValue: PropTypes.bool,  // value是否是角色全部数据\n    };\n\n    static defaultProps = {\n        value: [],\n        onChange: () => void 0,\n        fullValue: false,\n    };\n\n    state = {\n        loading: false,\n        dataSource: [], // table展示的角色数据，搜索时是roles子集\n        roles: [],      // 所有的角色数据\n    };\n\n    columns = [\n        {title: '角色名', dataIndex: 'name', key: 'name'},\n        {title: '描述', dataIndex: 'remark', key: 'remark'},\n    ];\n\n    componentDidMount() {\n        (async () => {\n            await this.handleSearch();\n        })();\n    }\n\n    handleSearch = async () => {\n        if (this.state.loading) return;\n\n        try {\n            this.setState({loading: true});\n            const res = await this.props.ajax.get('/roles');\n\n            const roles = (res || []);\n\n            this.setState({dataSource: [...roles], roles, loading: false});\n        } catch (e) {\n            this.setState({loading: false});\n            throw e;\n        }\n    };\n\n    handleSearchValue = (value) => {\n        const {roles} = this.state;\n\n        const dataSource = filterTree(roles, node => {\n            const {name, remark} = node;\n            return [name, remark].some(val => {\n                const lowerValue = (val || '').toLowerCase();\n                return lowerValue.includes(value);\n            });\n        });\n\n        this.setState({\n            dataSource,\n        });\n    };\n\n    handleChange = (e) => {\n        // 防抖\n        if (this.timer) clearTimeout(this.timer);\n\n        this.timer = setTimeout(() => this.handleSearchValue(e.target.value), 300);\n    };\n\n    render() {\n        const {\n            dataSource,\n            loading,\n        } = this.state;\n\n        const {value, onChange, fullValue, disabled, ...others} = this.props;\n\n        return (\n            <>\n                <div style={{padding: 8, display: 'flex', alignItems: 'center'}}>\n                    <Input.Search\n                        style={{flex: 1}}\n                        allowClear\n                        placeholder=\"输入关键字进行搜索\"\n                        onSearch={this.handleSearchValue}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <WithCheckboxTable\n                    showHeader={true}\n                    size=\"small\"\n                    rowSelection={{\n                        getCheckboxProps: () => {\n                            return {disabled};\n                        },\n                        selectedRowKeys: fullValue ? (value || []).map(item => item.id) : value,\n                        onChange: (selectedRowKeys, selectedRows) => onChange(fullValue ? selectedRows : selectedRowKeys),\n                    }}\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                    rowKey=\"id\"\n                    {...others}\n                />\n            </>\n        );\n    }\n}\n\n","import {useState} from 'react';\nimport {Form, Row, Col, Card, Button} from 'antd';\nimport {ModalContent, FormItem, Content} from '@ra-lib/components';\nimport {validateRules} from '@ra-lib/util';\nimport {useDebounceValidator} from '@ra-lib/hooks';\nimport config from 'src/commons/config-hoc';\nimport RoleSelectTable from 'src/pages/role/RoleSelectTable';\nimport {IS_MOBILE} from 'src/config';\n\nexport default config({\n    modal: {\n        title: props => {\n            if (props?.record?.isDetail) return '查看用户';\n\n            return props.isEdit ? '编辑用户' : '创建用户';\n        },\n        width: '70%',\n        top: 50,\n    },\n})(function Edit(props) {\n    const {record, isEdit, onOk, onCancel} = props;\n    const [loading, setLoading] = useState(false);\n    const [form] = Form.useForm();\n    const isDetail = record?.isDetail;\n\n    // 编辑时，查询详情数据\n    props.ajax.useGet('/users/:id', {id: record?.id}, [], {\n        mountFire: isEdit,\n        setLoading,\n        formatResult: res => {\n            if (!res) return;\n            form.setFieldsValue(res);\n        },\n    });\n    const {run: save} = props.ajax.usePost('/users', null, {setLoading, successTip: '创建成功！'});\n    const {run: update} = props.ajax.usePut('/users', null, {setLoading, successTip: '修改成功！'});\n    const {run: fetchUserByAccount} = props.ajax.useGet('/userByAccount');\n\n    async function handleSubmit(values) {\n        const params = {\n            ...values,\n        };\n\n        if (isEdit) {\n            await update(params);\n        } else {\n            await save(params);\n        }\n\n        onOk();\n    }\n\n    const checkAccount = useDebounceValidator(async (rule, value) => {\n        if (!value) return;\n\n        const user = await fetchUserByAccount({account: value});\n        if (!user) return;\n\n        const id = form.getFieldValue('id');\n        if (isEdit && user.id !== id && user.account === value) throw Error('账号不能重复！');\n        if (!isEdit && user.account === value) throw Error('账号不能重复！');\n    });\n\n    const disabled = isDetail;\n    const layout = {\n        labelCol: {flex: '100px'},\n        disabled,\n    };\n    const colLayout = {\n        xs: {span: 24},\n        sm: {span: 12},\n    };\n    return (\n        <ModalContent\n            loading={loading}\n            okText=\"保存\"\n            onOk={() => form.submit()}\n            cancelText=\"重置\"\n            onCancel={() => form.resetFields()}\n            fullScreen={IS_MOBILE}\n            footer={disabled ? <Button onClick={onCancel}>关闭</Button> : undefined}\n        >\n            <Form\n                form={form}\n                name=\"roleEdit\"\n                onFinish={handleSubmit}\n            >\n                {isEdit ? <FormItem hidden name=\"id\"/> : null}\n                <Row gutter={8}>\n                    <Col {...colLayout} style={{marginBottom: IS_MOBILE ? 16 : 0}}>\n                        <Card title=\"基础信息\">\n                            <Content fitHeight={!IS_MOBILE} otherHeight={160}>\n                                <FormItem\n                                    {...layout}\n                                    label=\"账号\"\n                                    name=\"account\"\n                                    required\n                                    noSpace\n                                    rules={[\n                                        {validator: checkAccount},\n                                    ]}\n                                />\n                                <FormItem\n                                    {...layout}\n                                    label=\"密码\"\n                                    name=\"password\"\n                                    required\n                                    noSpace\n                                />\n                                <FormItem\n                                    {...layout}\n                                    label=\"姓名\"\n                                    name=\"name\"\n                                    required\n                                    noSpace\n                                />\n                                <FormItem\n                                    {...layout}\n                                    label=\"邮箱\"\n                                    name=\"email\"\n                                    rules={[validateRules.email()]}\n                                    required\n                                    noSpace\n                                />\n                                <FormItem\n                                    {...layout}\n                                    label=\"手机号\"\n                                    name=\"mobile\"\n                                    rules={[validateRules.mobile()]}\n                                    required\n                                    noSpace\n                                />\n                            </Content>\n                        </Card>\n                    </Col>\n                    <Col {...colLayout}>\n                        <Card title=\"角色配置\" bodyStyle={{padding: 0}}>\n                            <FormItem\n                                {...layout}\n                                name=\"roleIds\"\n                            >\n                                <RoleSelectTable\n                                    disabled={disabled}\n                                    fitHeight={!IS_MOBILE}\n                                    otherHeight={200}\n                                />\n                            </FormItem>\n                        </Card>\n                    </Col>\n                </Row>\n            </Form>\n        </ModalContent>\n    );\n});\n","import {useState} from 'react';\nimport config from 'src/commons/config-hoc';\nimport {Button, Form, Space} from 'antd';\nimport {\n    PageContent,\n    QueryBar,\n    FormItem,\n    Table,\n    Pagination,\n    Operator,\n    ToolBar,\n} from '@ra-lib/components';\nimport {IS_MOBILE} from 'src/config';\nimport EditModal from './EditModal';\n\nexport default config({\n    path: '/users',\n})(function Role(props) {\n    const [loading, setLoading] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [conditions, setConditions] = useState({});\n    const [visible, setVisible] = useState(false);\n    const [record, setRecord] = useState(null);\n    const [form] = Form.useForm();\n\n    const params = {\n        ...conditions,\n        pageNum,\n        pageSize,\n    };\n\n    // 获取列表\n    const {\n        data: {\n            dataSource,\n            total,\n        } = {},\n    } = props.ajax.useGet('/users', params, [conditions, pageNum, pageSize], {\n        setLoading,\n        formatResult: res => {\n            return {\n                dataSource: res?.list || [],\n                total: res.total || 0,\n            };\n        },\n    });\n\n    // 删除\n    const {run: deleteRecord} = props.ajax.useDel('/users/:id', null, {setLoading, successTip: '删除成功！'});\n\n    const columns = [\n        {title: '账号', dataIndex: 'account'},\n        {title: '姓名', dataIndex: 'name'},\n        {title: '手机号', dataIndex: 'mobile'},\n        {title: '邮箱', dataIndex: 'email'},\n        {\n            title: '操作',\n            key: 'operator',\n            render: (text, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '查看',\n                        onClick: () => setRecord({...record, isDetail: true}) || setVisible(true),\n                    },\n                    {\n                        label: '修改',\n                        onClick: () => setRecord(record) || setVisible(true),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除「${name}」吗？`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                ];\n\n                return (<Operator items={items}/>);\n            },\n        },\n    ];\n\n    async function handleDelete(id) {\n        await deleteRecord(id);\n        // 触发列表更新\n        setConditions({...conditions});\n    }\n\n    const queryItem = {\n        style: {width: 200},\n    };\n\n    return (\n        <PageContent loading={loading}>\n            <QueryBar showCollapsedBar={IS_MOBILE}>\n                {(collapsed) => {\n                    const hidden = IS_MOBILE && collapsed;\n                    return (\n                        <Form\n                            name=\"user\"\n                            layout=\"inline\"\n                            form={form}\n                            onFinish={values => setPageNum(1) || setConditions(values)}\n                        >\n                            <FormItem\n                                {...queryItem}\n                                label=\"账号\"\n                                name=\"account\"\n                            />\n                            <FormItem\n                                hidden={hidden}\n                                {...queryItem}\n                                label=\"姓名\"\n                                name=\"name\"\n                            />\n                            <FormItem\n                                hidden={hidden}\n                                {...queryItem}\n                                label=\"手机号\"\n                                name=\"mobile\"\n                            />\n                            <FormItem>\n                                <Space>\n                                    <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                                    <Button onClick={() => form.resetFields()}>重置</Button>\n                                </Space>\n                            </FormItem>\n                        </Form>\n                    );\n                }}\n            </QueryBar>\n            <ToolBar>\n                <Button type=\"primary\" onClick={() => setRecord(null) || setVisible(true)}>添加</Button>\n            </ToolBar>\n            <Table\n                serialNumber\n                pageNum={pageNum}\n                pageSize={pageSize}\n                fitHeight={!IS_MOBILE}\n                dataSource={dataSource}\n                columns={columns}\n                rowKey=\"id\"\n                pagination={false}\n                scroll={IS_MOBILE ? {x: 1000} : undefined}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={setPageNum}\n                onPageSizeChange={pageSize => setPageNum(1) || setPageSize(pageSize)}\n            />\n            <EditModal\n                fullScreen={IS_MOBILE}\n                width={IS_MOBILE ? '100%' : '70%'}\n                visible={visible}\n                record={record}\n                isEdit={!!record}\n                onOk={() => setVisible(false) || setConditions({...conditions})}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}