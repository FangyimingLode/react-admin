{"version":3,"sources":["pages/user/index.jsx"],"names":["config","path","props","useState","loading","setLoading","pageNum","setPageNum","pageSize","setPageSize","conditions","setConditions","selectedRowKeys","setSelectedRowKeys","useForm","form","params","ajax","useGet","formatResult","res","dataSource","list","total","data","batchDelete","useDel","successTip","run","columns","title","dataIndex","width","render","text","record","id","name","items","label","onClick","history","push","color","confirm","onConfirm","handleDelete","a","ids","batchDeleteConfirm","length","join","layout","wrapperCol","style","disabled","onFinish","values","type","options","value","htmlType","resetFields","danger","rowSelection","onChange","fitHeight","rowKey","pagination","onPageNumChange","onPageSizeChange"],"mappings":"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","file":"static/js/31.92c8c0a9.chunk.js","sourcesContent":["import {useState} from 'react';\nimport config from 'src/commons/config-hoc';\nimport {Button, Form, Space} from 'antd';\nimport {\n    PageContent,\n    QueryBar,\n    FormItem,\n    ToolBar,\n    Table,\n    Pagination,\n    batchDeleteConfirm,\n    Operator,\n} from '@ra-lib/components';\n\nexport default config({\n    path: '/users',\n})(function Role(props) {\n    const [loading, setLoading] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [conditions, setConditions] = useState({});\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [form] = Form.useForm();\n\n    const params = {\n        ...conditions,\n        pageNum,\n        pageSize,\n    };\n\n    // 获取角色列表\n    const {\n        data: {\n            dataSource,\n            total,\n        } = {},\n    } = props.ajax.useGet('/users', params, [conditions, pageNum, pageSize], {\n        setLoading,\n        // mountFire: false, // 初始化不查询\n        formatResult: res => {\n            return {\n                dataSource: res?.list || [],\n                total: res?.total || 0,\n            };\n        },\n    });\n\n    // 批量删除\n    const {run: batchDelete} = props.ajax.useDel('/users', null, {setLoading, successTip: '批量删除成功！'});\n\n    const columns = [\n        {title: '用户名', dataIndex: 'name', width: 100},\n        {title: '年龄', dataIndex: 'age', width: 100},\n        {title: '工作', dataIndex: 'job', width: 100},\n        {title: '邮箱', dataIndex: 'email', width: 200},\n        {title: '电话', dataIndex: 'mobile', width: 120},\n        {title: '备注', dataIndex: 'remark'},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (text, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        onClick: () => props.history.push(`/users/${id}?name=${name}`),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: '您确定删除吗？',\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                ];\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    async function handleDelete(id) {\n        await batchDelete({ids: id}, {successTip: '删除成功！'});\n    }\n\n    async function handleBatchDelete() {\n        await batchDeleteConfirm(selectedRowKeys.length);\n\n        await batchDelete({ids: selectedRowKeys.join(',')});\n    }\n\n    const layout = {\n        wrapperCol: {style: {width: 200}},\n    };\n    const disabled = !selectedRowKeys?.length;\n\n    return (\n        <PageContent loading={loading}>\n            <QueryBar>\n                <Form\n                    name=\"user\"\n                    layout=\"inline\"\n                    form={form}\n                    onFinish={values => setPageNum(1) || setConditions(values)}\n                >\n                    <FormItem\n                        {...layout}\n                        label=\"用户名\"\n                        name=\"name\"\n                    />\n                    <FormItem\n                        {...layout}\n                        type=\"number\"\n                        label=\"年龄\"\n                        name=\"age\"\n                    />\n                    <FormItem\n                        {...layout}\n                        type=\"select\"\n                        label=\"工作\"\n                        name=\"job\"\n                        options={[\n                            {value: '1', label: 'UI设计师'},\n                            {value: '2', label: '前端'},\n                            {value: '3', label: '后端'},\n                        ]}\n                    />\n                    <FormItem>\n                        <Space>\n                            <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                            <Button onClick={() => form.resetFields()}>重置</Button>\n                        </Space>\n                    </FormItem>\n                </Form>\n            </QueryBar>\n            <ToolBar>\n                <Button type=\"primary\" onClick={() => props.history.push('/users/:id')}>添加</Button>\n                <Button danger disabled={disabled} onClick={handleBatchDelete}>删除</Button>\n            </ToolBar>\n            <Table\n                rowSelection={{selectedRowKeys, onChange: setSelectedRowKeys}}\n                fitHeight\n                dataSource={dataSource}\n                columns={columns}\n                rowKey=\"id\"\n                pagination={false}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={setPageNum}\n                onPageSizeChange={pageSize => setPageNum(1) || setPageSize(pageSize)}\n            />\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}